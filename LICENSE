The Null License v0.0.0...1
The copyright holder is undefined, because this software is the property of everybody and nobody, simultaneously. Where the "body" suffix refers to any entity, which could be a group or a singleton of humans, animals, robots, aliens, or whatever kind of entity with the capabilities of creation, self-awareness, and any other characteristics that might give them more rights than inanimate objects.
There is no copyright date, because this software is timeless, eternal, and ephemeral.
This software isn't invented, nor discovered.
This software has no warranty, because it does nothing, and it's nothing.
No entity is responsible for any positive or negative events that might happen to any other entity while using, holding, modifying (or any kind of interaction) this software, because this program has no use, and does nothing. This software has no capability of being guilty, and it's not capable of making an entity guilty of something, anything, everything, nor nothing.

A program is considered an "instance" of the empty program if and only if it does nothing. There are 3 sets (categories) an instance may belong to. An instance may be identical, equal, or equivalent.
Identity to The Empty Program is defined in terms of payload size. A program is identical if and only if the payload of its "container" is absolutely empty. This container can be (but it's not limited to) a text file, a raster image file, and audio file, chemical bonds, etc. Headers and metadata are not part of the payload. An example of identity is a 0x0 pixel image interpreted using a programming language in which pixels are "OpCodes". If a program is identical to The Empty Program, it's considered "pure".
Equality to The Empty Program is defined in terms of payload content. If a program has no instructions to execute, but it has compiler or interpreter directives (or anything akin to directives), it's considered equal. An example (not limited to this) is a program that imports a library, then proceeds to do nothing. Another example is a program that activates "strict mode" then does nothing.
Equivalence to The Empty Program is defined in terms of actions, effects, and output. If a program has instructions, but these instructions do not affect the environment in a meaningful way, and/or the program doesn't output any data, it may be considered equivalent. An example (again, not limited to) is a program that loops 4 times but halts and does nothing else. Another example is a program entirely composed of "No-Ops" (operators, functions, and/or subroutines that do nothing but waste time).

The set of identical programs is a subset of the equal programs. The set of equal programs is a subset of equivalent programs.
Programs outside of all these 3 sets are not empty programs. However, a program may belong to one of these sets depending on how it is interpreted, which depends on both the chosen (arbitrarily) programming language and the implementation of it.
